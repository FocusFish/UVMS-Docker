{
	"variables": [],
	"info": {
		"name": "Spatial Integration Test",
		"_postman_id": "4676c268-0c12-5138-3962-8a7445a11745",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1_Authenticate",
			"description": "",
			"item": [
				{
					"name": "authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests[\"authenticated is true\"] = data.authenticated === true;",
									"",
									"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
									"",
									"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/usm-administration/rest/authenticate",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Area Resource",
			"description": "",
			"item": [
				{
					"name": "Get Area Properties",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/properties",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"areaType\": \"EEZ\",\n        \"id\": 1\n    }\n]"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get AreaDetails ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/details",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"longitude\" : 41,\r\n   \"latitude\" : -20.843,\r\n   \"areaType\" : \"EEZ\",\r\n   \"crs\" : 4326  \r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Location Details PORT",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/location/details",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"longitude\" : 41,\r\n   \"latitude\" : -20.843,\r\n   \"locationType\" : \"PORT\",\r\n   \"crs\" : 4326  \r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Location Details PORT With gid",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/location/details",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"gid\" : 1,\r\n   \"locationType\" : \"PORT\"\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get AreaDetails  PORT",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/details",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"longitude\" : 41,\r\n   \"latitude\" : -20.843,\r\n   \"areaType\" : \"PORT\",\r\n   \"crs\" : 4326  \r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Eez Areas By filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/byfilter",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"areaType\" : \"EEZ\",\r\n   \"filter\" : \"Island\"\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Location Details EEZ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/location/details",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"longitude\" : 41,\r\n   \"isGeom\" : true,\r\n   \"latitude\" : -20.843,\r\n   \"locationType\" : \"PORT\",\r\n   \"crs\" : 4326  \r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Location Details EEZ with gid",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/location/details",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"locationType\" : \"EEZ\",\r\n   \"gid\" : 1  \r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get PortArea Areas By filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/byfilter",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"areaType\" : \"PORTAREA\",\r\n   \"filter\" : \"Island\"\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Area by code",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"//var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/area/type/code",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"areaTypes\": [\n        {\n            \"areaType\": \"EEZ\",\n            \"areaCode\": \"BEL\"\n        },\n         {\n            \"areaType\": \"gfcm\",\n            \"areaCode\": \"5\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookmark Resource",
			"description": "",
			"item": [
				{
					"name": "Create Bookmark",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"data = \" + jsonData.data[0]] = jsonData.data[0] === undefined;",
									"",
									"postman.setEnvironmentVariable(\"bookmarkId\", jsonData.data.id);",
									"",
									"tests[\"environment.bookmarkId is \" + environment.bookmarkId] = environment.bookmarkId == jsonData.data.id;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.clearEnvironmentVariable(\"bookmarkId\");"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/bookmark",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 3453,\n  \"name\" : \"fkljfkfdj\",\n  \"srs\" : 3857,\n  \"extent\": \"ekfezmlklfezk\",\n  \"createdBy\": \"eeeeee\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Bookmark",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/bookmark/{{bookmarkId}}",
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"greg\",\n  \"srs\" : 999\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Bookmark",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/bookmark/{{bookmarkId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Bookmarks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/bookmark",
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Config Resource",
			"description": "",
			"item": [
				{
					"name": "Get Config Projections",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Projection 0: name = \" + jsonData.data[0].name] = jsonData.data[0].epsgCode === 3857;",
									"tests[\"Projection 1: name = \" + jsonData.data[1].name] = jsonData.data[1].epsgCode === 4326;"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/config/projections",
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Config Basic",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/config/basic",
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Config Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/config/report",
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Config Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/config/admin",
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Config User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/config/user",
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Geometry Utility Resource",
			"description": "",
			"item": [
				{
					"name": "Translate",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"lon = Math.round(jsonData.data.lon * 1000) / 1000;",
									"lat = Math.round(jsonData.data.lat * 1000) / 1000;",
									"",
									"lon_res = Math.round(11.203067794548824 * 1000) / 1000;",
									"lat_res = Math.round(-0.0004606825386206882 * 1000) / 1000;",
									"tests[\"Test lon \" + lon_res + \" == \" + lon] = lon_res  == lon;",
									"tests[\"Test lat \" + lat_res  + \" == \" + lat] = lat_res  == lat;",
									"tests[\"SRID\"] =  4326 == jsonData.data.srid;",
									"tests[\"WKT\"] =  \"POINT (11.203067794548824 -0.0004606825386207)\" == jsonData.data.wkt;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/geometry/utility/translate",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"sourceCode\" : 2070,\r\n   \"x\" : 19.9,\r\n   \"y\" : 99.8\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Buffer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"",
									"tests[\"WKT\"] =  \"POLYGON ((1332.536 23.35353, 1313.3212804032305 -171.73679201612825, 1256.4155325112868 -359.3299023650898, 1164.0056123025452 -532.2167030196022, 1039.6427811865476 -683.7532511865475, 888.1062330196023 -808.1160823025452, 715.2194323650899 -900.5260025112867, 527.6263220161284 -957.4317504032305, 332.53600000000006 -976.64647, 137.4456779838718 -957.4317504032305, -50.14743236508974 -900.5260025112867, -223.0342330196019 -808.1160823025454, -374.57078118654744 -683.7532511865476, -498.9336123025453 -532.2167030196022, -591.3435325112869 -359.3299023650895, -648.2492804032306 -171.7367920161277, -667.4639999999999 23.353530000000767, -648.2492804032302 218.44385201612923, -591.3435325112862 406.03696236509086, -498.9336123025444 578.9237630196034, -374.5707811865463 730.4603111865487, -223.03423301960078 854.8231423025462, -50.147432365087866 947.2330625112875, 137.44567798387394 1004.1388104032309, 332.5360000000025 1023.35353, 527.6263220161309 1004.1388104032299, 715.2194323650924 947.2330625112857, 888.1062330196048 854.8231423025435, 1039.6427811865499 730.4603111865451, 1164.0056123025472 578.9237630195993, 1256.4155325112881 406.03696236508625, 1313.3212804032312 218.44385201612437, 1332.536 23.35353))\" == jsonData.data;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/geometry/utility/buffer",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"buffer\": \"1000\",\r\n    \"longitude\": 332.536,\r\n    \"latitude\": 23.35353\r\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Image Resource",
			"description": "",
			"item": [
				{
					"name": "Create Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setGlobalVariable(\"legendGuid\", jsonData.data.legend.positions);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/image",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"positions\" : {\n        \"title\" : \"FS\",\n        \"cluster\": {\n           \"text\": \"This is a cluster\",\n           \"bgcolor\": \"#fffff\",\n           \"bordercolor\": \"#FF0000\"\n       },\n        \"classes\" : [{\n            \"color\" : \"#3DD671\",\n            \"text\" : \"Sweden\"\n        },\n        {\n            \"color\" : \"#F1D671\",\n            \"text\" : \"Belgium\"\n        }]\n    },\n    \"alarms\" : {\n        \"title\" : \"Status\",\n        \"classes\" : [{\n            \"color\" : \"#3DD671\",\n            \"text\" : \"Open\"\n        },\n        {\n            \"color\" : \"#F1D671\",\n            \"text\" : \"Closed\"\n        }]\n    },\n    \"segments\" : {\n        \"title\" : \"FS\",\n        \"lineStyle\" : \"5,5\",\n         \"classes\" : [{\n            \"color\" : \"#FF0000\",\n            \"text\" : \"Hello\"\n        },\n        {\n            \"color\" : \"#550000\",\n            \"text\" : \"YoROROROR\"\n        }]\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Legend Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/image/legend/{{legendGuid}}",
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Map Config Resource",
			"description": "",
			"item": []
		},
		{
			"name": "Service Layer Resource",
			"description": "",
			"item": [
				{
					"name": "Get Service Layer non existent",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"msg = \\\"Service layer not found\\\"\"] = jsonData.msg === \"Service layer not found\";"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/servicelayer/XXX",
						"method": "GET",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "User Area Resource",
			"description": "",
			"item": [
				{
					"name": "Update User Area",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setGlobalVariable(\"userAreaId\", jsonData.data);",
									"",
									"tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/userarea",
						"method": "PUT",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"Feature\",\r\n  \"geometry\": {\r\n        \"type\": \"MultiPolygon\",\r\n          \"coordinates\": [\r\n            [\r\n                [\r\n                    [-99.028, 46.985], [-99.028, 50.979],\r\n                    [-82.062, 50.979], [-82.062, 47.002],\r\n                    [-99.028, 46.985]\r\n                ]\r\n            ]\r\n          ]\r\n  },\r\n  \"properties\": {\r\n    \"id\": {{userAreaId}},\r\n    \"name\": \"My geom\",\r\n    \"description\": \"Desc\",\r\n    \"startDate\": \"2015-10-11T13:02:23\",\r\n    \"endDate\": \"2016-10-11T13:02:23\",\r\n    \"subType\": \"ABC\",\r\n    \"isShared\": \"false\"\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List User Area",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/userarea/list",
						"method": "GET",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"longitude\" : 41,\r\n   \"latitude\" : -20.843,\r\n   \"locationType\" : \"EEZ\",\r\n   \"crs\" : 4326  \r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create User Area",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setGlobalVariable(\"userAreaId\", jsonData.data);",
									"",
									"tests[\"User Area Id = \" + jsonData.data] = jsonData.data !== 0;"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/userarea",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"Feature\",\r\n  \"geometry\": {\r\n        \"type\": \"MultiPolygon\",\r\n          \"coordinates\": [\r\n            [\r\n                [\r\n                    [-99.028, 46.985], [-99.028, 50.979],\r\n                    [-82.062, 50.979], [-82.062, 47.002],\r\n                    [-99.028, 46.985]\r\n                ]\r\n            ],\r\n            [\r\n                [\r\n                    [-109.028, 36.985], [-109.028, 40.979],\r\n                    [-102.062, 40.979], [-102.062, 37.002],\r\n                    [-109.028, 36.985]\r\n                ]\r\n             ]\r\n          ]\r\n  },\r\n  \"properties\": {\r\n    \"name\": \"{{$guid}}\",\r\n    \"description\": \"Test description 2\",\r\n    \"startDate\": \"2015-10-11T13:02:23\",\r\n    \"endDate\": \"2015-10-11T13:02:23\",\r\n    \"subType\": \"ABC\",\r\n    \"isShared\": \"true\"\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get UserAreaDetails after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"data = \" + jsonData.data[0]] = jsonData.data[0] === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/userarea/details",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\": {{userAreaId}},\r\n   \"isGeom\": true\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete User Area",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/userarea/{{userAreaId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get User Area Layer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/userarea/layers",
						"method": "GET",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Detail User Area",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"User Area Id = \" + jsonData.data[0].properties.id] = jsonData.data[0].properties.id == globals.userAreaId;",
									"tests[\"User Area Type = \" + jsonData.data[0].properties.areaType] = jsonData.data[0].properties.areaType === \"USERAREA\";",
									"tests[\"User Area Name = \" + jsonData.data[0].properties.name] = jsonData.data[0].properties.name === \"My geom\";",
									"tests[\"User Area End Date = \" + jsonData.data[0].properties.endDate] = jsonData.data[0].properties.endDate === \"2016-10-11T13:02:23\";"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/userarea/details",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{userAreaId}},\r\n    \"isGeom\" : true\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Detail Payload 2 User Area",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code = 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/userarea/details",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"longitude\" : -99.028,\r\n   \"latitude\" :  46.985,\r\n   \"areaType\" : \"ABC\",\r\n   \"crs\" : 4326  \r\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "XML Resource",
			"description": "",
			"item": [
				{
					"name": "closest-areas 3216",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 3500;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/closest-areas",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:ClosestAreaSpatialRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <Point>\n        <ns2:Latitude>-21</ns2:Latitude>\n        <ns2:Longitude>50</ns2:Longitude>\n        <ns2:Crs>3216</ns2:Crs>\n    </Point>\n    <AreaTypes>\n        <AreaType>COUNTRY</AreaType>\n        <AreaType>RFMO</AreaType>\n        <AreaType>PORTAREA</AreaType>\n    </AreaTypes>\n    <Unit>METERS</Unit>\n</ns2:ClosestAreaSpatialRQ>"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "enrichment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 3000;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/enrichment",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:SpatialEnrichmentRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <Point>\n        <ns2:Longitude>-10.7411</ns2:Longitude>\n        <ns2:Latitude>32.8561</ns2:Latitude>\n        <ns2:Crs>4326</ns2:Crs>\n    </Point>\n    <AreaTypes>\n        <AreaType>EEZ</AreaType>\n        <AreaType>RFMO</AreaType>\n        <AreaType>COUNTRY</AreaType>\n    </AreaTypes>\n    <LocationTypes>\n        <LocationType>PORT</LocationType>\n    </LocationTypes>\n    <Unit>METERS</Unit>\n</ns2:SpatialEnrichmentRQ>"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "closest-locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 1000;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/closest-locations",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:ClosestLocationSpatialRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <Point>\n        <ns2:Longitude>-9.5</ns2:Longitude>\n        <ns2:Latitude>41.0</ns2:Latitude>\n        <ns2:Crs>4326</ns2:Crs>\n    </Point>\n    <LocationTypes>\n        <LocationType>EEZ</LocationType>  \n    </LocationTypes>\n    <Unit>KILOMETERS</Unit>\n</ns2:ClosestLocationSpatialRQ>\n"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "filter-areas",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 2000;",
									"",
									"var jsonObject = xml2Json(responseBody);"
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/filter-areas",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:FilterAreasSpatialRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <ns2:method>GET_FILTER_AREA</ns2:method>\n    <UserAreas>\n        <ns2:UserArea>\n            <ns2:Id>1</ns2:Id>\n            <ns2:AreaType>EEZ</ns2:AreaType>\n        </ns2:UserArea>\n        <ns2:UserArea>\n            <ns2:Id>12</ns2:Id>\n            <ns2:AreaType>EEZ</ns2:AreaType>\n        </ns2:UserArea>\n        <ns2:UserArea>\n            <ns2:Id>10</ns2:Id>\n            <ns2:AreaType>RFMO</ns2:AreaType>\n        </ns2:UserArea>\n        <ns2:UserArea>\n            <ns2:Id>18</ns2:Id>\n            <ns2:AreaType>RFMO</ns2:AreaType>\n        </ns2:UserArea>\n        <ns2:UserArea>\n            <ns2:Id>20</ns2:Id>\n            <ns2:AreaType>RFMO</ns2:AreaType>\n        </ns2:UserArea>\n    </UserAreas>\n    <ScopeAreas>\n        <ns2:ScopeArea>\n            <ns2:Id>1</ns2:Id>\n            <ns2:AreaType>EEZ</ns2:AreaType>\n        </ns2:ScopeArea>\n        <ns2:ScopeArea>\n            <ns2:Id>44</ns2:Id>\n            <ns2:AreaType>EEZ</ns2:AreaType>\n        </ns2:ScopeArea>\n    </ScopeAreas>\n</ns2:FilterAreasSpatialRQ>"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "areas-by-location",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 1500;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/areas-by-location",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:AreaByLocationSpatialRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <ns2:method>GET_AREA_BY_LOCATION</ns2:method>\n    <Point>\n        <ns2:Longitude>-9.5</ns2:Longitude>\n        <ns2:Latitude>41.0</ns2:Latitude>\n        <ns2:Crs>4326</ns2:Crs>\n    </Point>\n</ns2:AreaByLocationSpatialRQ>"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "enrichment 3785",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 3000;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/enrichment",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:SpatialEnrichmentRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <Point>\n        <ns2:Longitude>-10.7411</ns2:Longitude>\n        <ns2:Latitude>32.8561</ns2:Latitude>\n        <ns2:Crs>3785</ns2:Crs>\n    </Point>\n    <AreaTypes>\n        <AreaType>EEZ</AreaType>\n        <AreaType>RFMO</AreaType>\n        <AreaType>COUNTRY</AreaType>\n    </AreaTypes>\n    <LocationTypes>\n        <LocationType>PORT</LocationType>\n    </LocationTypes>\n    <Unit>METERS</Unit>\n</ns2:SpatialEnrichmentRQ>"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "closest-areas",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 3500;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/closest-areas",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:ClosestAreaSpatialRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <Point>\n        <ns2:Longitude>40.0</ns2:Longitude>\n        <ns2:Latitude>30.0</ns2:Latitude>\n        <ns2:Crs>4326</ns2:Crs>\n    </Point>\n    <AreaTypes>\n        <AreaType>COUNTRY</AreaType>\n        <AreaType>RFMO</AreaType>\n        <AreaType>PORTAREA</AreaType>\n    </AreaTypes>\n    <Unit>METERS</Unit>\n</ns2:ClosestAreaSpatialRQ>"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "closest-locations 3216",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 1000;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/closest-locations",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:ClosestLocationSpatialRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <Point>\n        <ns2:Latitude>-21</ns2:Latitude>\n        <ns2:Longitude>50</ns2:Longitude>\n        <ns2:Crs>3216</ns2:Crs>\n    </Point>\n    <LocationTypes>\n        <LocationType>EEZ</LocationType>  \n    </LocationTypes>\n    <Unit>KILOMETERS</Unit>\n</ns2:ClosestLocationSpatialRQ>\n"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "closest-areas 3785",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 3500;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/closest-areas",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:ClosestAreaSpatialRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <Point>\n        <ns2:Longitude>40.0</ns2:Longitude>\n        <ns2:Latitude>30.0</ns2:Latitude>\n        <ns2:Crs>3785</ns2:Crs>\n    </Point>\n    <AreaTypes>\n        <AreaType>COUNTRY</AreaType>\n        <AreaType>RFMO</AreaType>\n        <AreaType>PORTAREA</AreaType>\n    </AreaTypes>\n    <Unit>METERS</Unit>\n</ns2:ClosestAreaSpatialRQ>"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "enrichment 3216",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 3000;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/enrichment",
						"method": "POST",
						"header": [
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:SpatialEnrichmentRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <Point>\n        <ns2:Latitude>-21</ns2:Latitude>\n        <ns2:Longitude>50</ns2:Longitude>\n        <ns2:Crs>3216</ns2:Crs>\n    </Point>\n    <AreaTypes>\n        <AreaType>EEZ</AreaType>\n        <AreaType>RFMO</AreaType>\n        <AreaType>COUNTRY</AreaType>\n    </AreaTypes>\n    <LocationTypes>\n        <LocationType>PORT</LocationType>\n    </LocationTypes>\n    <Unit>METERS</Unit>\n</ns2:SpatialEnrichmentRQ>"
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "areas-by-location 3216",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"//tests[\"Response time is \" + responseTime + \" ms\"] = responseTime < 1500;",
									"",
									"var jsonObject = xml2Json(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{hostname}}:{{port}}/spatial/rest/xml/areas-by-location",
						"method": "POST",
						"header": [
							{
								"key": "roleName",
								"value": "rep_power_role",
								"description": ""
							},
							{
								"key": "scopeName",
								"value": "EC",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/xml",
								"description": ""
							},
							{
								"key": "authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:AreaByLocationSpatialRQ xmlns:ns2=\"http://europa.eu/ec/fisheries/uvms/spatial/model/schemas\">\n    <ns2:method>GET_AREA_BY_LOCATION</ns2:method>\n    <Point>\n        <ns2:Latitude>-21</ns2:Latitude>\n        <ns2:Longitude>50</ns2:Longitude>\n        <ns2:Crs>3216</ns2:Crs>\n    </Point>\n</ns2:AreaByLocationSpatialRQ>"
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "authenticate",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"tests[\"authenticated is true\"] = data.authenticated === true;",
							"",
							"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
							"",
							"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
							"",
							"var jsonData = JSON.parse(responseBody);"
						]
					}
				}
			],
			"request": {
				"url": "{{hostname}}:{{port}}/usm-administration/rest/authenticate",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Location Details PORT",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"",
							"var jsonObject = xml2Json(responseBody);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{hostname}}:{{port}}/spatial/rest/area/location/details",
				"method": "POST",
				"header": [
					{
						"key": "roleName",
						"value": "rep_power_role",
						"description": ""
					},
					{
						"key": "scopeName",
						"value": "EC",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "authorization",
						"value": "{{token}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"longitude\" : 41,\r\n   \"latitude\" : -20.843,\r\n   \"locationType\" : \"PORT\",\r\n   \"crs\" : 4326  \r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "authenticate copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"tests[\"authenticated is true\"] = data.authenticated === true;",
							"",
							"postman.setEnvironmentVariable(\"token\", data.jwtoken);",
							"",
							"tests[\"environment token is \" + environment.token] = environment.token === data.jwtoken;",
							"",
							"var jsonData = JSON.parse(responseBody);"
						]
					}
				}
			],
			"request": {
				"url": "{{hostname}}:{{port}}/usm-administration/rest/authenticate",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"userName\": \"rep_power\",\n   \"password\": \"abcd-1234\"\n}"
				},
				"description": ""
			},
			"response": []
		}
	]
}